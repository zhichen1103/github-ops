name: create WAF rules
env:
  AWS_REGION: ap-southeast-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
on:
  push:
    paths:
      - "**.tf"

jobs:
  run-tf-waf-plan:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run Terraform Format
        id: format
        run: |
          terraform fmt
        continue-on-error: false

      - name: Terraform init
        id: init
        working-directory: ./aws-waf
        run: |
          terraform  init
        continue-on-error: false

      - name: Terraform Validate
        id: validate
        working-directory: ./aws-waf
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        working-directory: ./aws-waf
        run: |
          terraform plan -no-color
        continue-on-error: false

      # Post Terraform plan as a comment to PR
      - name: Post Terraform plan to PR
        uses: actions/github-script@v6
        # if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


     # - name: Terraform apply
     #   id: apply
     #   working-directory: ./aws-waf
     #   #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
     #   run: |
     #     terraform apply -auto-approve
     #   continue-on-error: false

      - name: Terraform destroy
        id: destroy
        working-directory: ./aws-waf
        run: |
          terraform destroy -auto-approve
        continue-on-error: false
